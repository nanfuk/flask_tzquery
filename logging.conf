[loggers]
keys=root,flask,tzquery,otnDispatch,otnRing 
;得先声明logger，这里把werkzeug注释掉，则打开了内置WSGI Server端：Werkzeug的日志功能 
  
[handlers]                       ;声明handler
keys=consoleHandler,flaskFileHandler,appFileHandler
  
[formatters]                     ;声名formatter，这里有一个，红色标注
keys=logFormatter

[logger_root]
level=INFO     ;DEBUG,INFO,WARNING,ERROR,CRITICAL
handlers=consoleHandler    ;配置为fileHandler，则flask本身的日志也会写入文件中

[logger_werkzeug]
qualname=werkzeug
level=CRITICAL
handlers=consoleHandler
propagate=1

[logger_flask]
qualname=flask
handlers=flaskFileHandler
propagate=0

[logger_tzquery]
level=DEBUG
handlers=appFileHandler,consoleHandler
qualname=tzquery
propagate=0

[logger_otnDispatch]
level=DEBUG
handlers=appFileHandler
qualname=otnDispatch
propagate=0

[logger_otnRing]
level=DEBUG
handlers=appFileHandler
qualname=otnRing
propagate=0
 
[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=logFormatter
args=(sys.stdout,)
 
[handler_flaskFileHandler]
class=FileHandler
level=DEBUG
formatter=logFormatter
args=('log/flask.log', 'a', 'utf8')

[handler_appFileHandler]
class=FileHandler
level=DEBUG
formatter=logFormatter
args=('log/app.log', 'a', 'utf8')

[formatter_logFormatter]
format=%(asctime)s %(levelname)s %(name)s %(message)s
datefmt=%y/%m/%d %H:%M:%S