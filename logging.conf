[loggers]
keys=root,werkzeug,simpleExample,Manager,Main,OTN,otn_ring,flaskLog ;得先声明logger，这里有三个，绿色标注，只是名称，用于对应下面定义的handler
  
[handlers]                       ;声明handler，这里有两个，蓝色标注
keys=consoleHandler,fileHandler,fileLogHandler 
  
[formatters]                     ;声名formatter，这里有一个，红色标注
keys=simpleFormatter,logFormatter

[logger_root]
level=INFO     ;DEBUG,INFO,WARNING,ERROR,CRITICAL
handlers=consoleHandler    ;配置为fileHandler，则flask本身的日志也会写入文件中

[logger_werkzeug]
qualname=werkzeug
level=CRITICAL
handlers=consoleHandler
propagate=0

[logger_flaskLog]
qualname=flaskLog
handlers=fileLogHandler
propagate=0

[logger_simpleExample]
level=DEBUG     ;假设设为WARN，则propagete设为1，则只有WARN以上的日志会传给root，root无条件接收，就算设置的是ERROR
handlers=consoleHandler
qualname=simpleExample   ;logger名称，应用程序通过 logging.getLogger获取。
propagate=0     ;propagate 是否传递消息给父类的log信息，0:否 1:是。另外;符号表示配置文件的注释

[logger_Manager]
level=DEBUG
handlers=fileHandler
qualname=Manager
propagate=0

[logger_Main]
level=DEBUG
handlers=fileHandler
qualname=Main
propagate=0

[logger_OTN]
level=DEBUG
handlers=fileHandler
qualname=OTN
propagate=0

[logger_otn_ring]
level=DEBUG
handlers=fileHandler
qualname=otn_ring
propagate=0
 
[handler_consoleHandler]
class=StreamHandler
level=DEBUG
;formatter=simpleFormatter
args=(sys.stdout,)
 
[handler_fileHandler]
class=FileHandler
level=DEBUG
formatter=simpleFormatter
args=('log/smplog.log', 'a', 'utf8')    ;w表示覆盖原日志，a表示追加日志(默认，也不能省略，会出错)。fileHandler参数参考下面的图
 
[handler_fileLogHandler]
class=FileHandler
level=DEBUG
formatter=logFormatter
args=('log/smplog.log', 'a', 'utf8')    ;w表示覆盖原日志，a表示追加日志(默认，也不能省略，会出错)。fileHandler参数参考下面的图

[formatter_simpleFormatter]
format=%(asctime)s %(levelname)s %(name)s %(filename)s %(funcName)s %(lineno)d %(message)s
datefmt=%y/%m/%d %H:%M:%S

[formatter_logFormatter]
format=%(asctime)s %(levelname)s %(name)s %(message)s
datefmt=%y/%m/%d %H:%M:%S